import Bluebird from 'bluebird'
import * as apiRequester from './apiRequester'
import moment from "moment";

export async function getTweets(user) {
    const numberOfTweets = getNumberOfTweets(user)
    const request = `http://${getHost()}:7890/1.1/statuses/user_timeline.json?screen_name=${user}&count=${numberOfTweets}`
    const response = await apiRequester.send(request)
    const tweets = response.data || []
    const since = localStorage.getItem(`${user}_since`)
    if (since) {
        return tweets.filter(t => {
            const now = moment()
            const date = moment(t.created_at)
            return now.diff(date, 'minutes') < since
        })
    }

    return tweets
}

export async function getRetweeters(id) {
    const request = `http://${getHost()}:7890/1.1/statuses/retweeters/ids.json?id=${id}&count=100&stringify_ids=true`
    const response = await apiRequester.send(request)
    const userIds = response.data ? response.data.ids : []
    const retweeters = await Bluebird.map(userIds, async uid => {
        const request = `http://${getHost()}:7890/1.1/users/show.json?user_id=${uid}`
        const response = await apiRequester.send(request)

        return response.data
    })

    return retweeters
}

export function getTweetLink(userId, id) {
    return `https://twitter.com/${userId}/status/${id}`
}

export async function getUserInfo(user) {
    const request = `http://${getHost()}:7890/1.1/users/lookup.json?screen_name=${user}`
    const response = await apiRequester.send(request)

    return response.data || {}
}

function getNumberOfTweets(user) {
    let numberOfTweets = localStorage.getItem(`${user}_numberOfTweets`)
    if (!numberOfTweets) {
        numberOfTweets = '10'
        localStorage.setItem(`${user}_numberOfTweets`, numberOfTweets)
    }

    return Number(numberOfTweets)
}

function getHost() {
    return 'localhost'
    //'192.168.0.6'
}